{
  "name": "phantomjs",
  "version": "1.9.19",
  "keywords": [
    "phantomjs",
    "headless",
    "webkit"
  ],
  "description": "Headless WebKit with JS API",
  "homepage": "https://github.com/Medium/phantomjs",
  "repository": {
    "type": "git",
    "url": "git://github.com/Medium/phantomjs.git"
  },
  "license": "Apache-2.0",
  "author": {
    "name": "Dan Pupius",
    "email": "dan@obvious.com",
    "url": "http://pupius.co.uk"
  },
  "maintainers": [
    {
      "name": "Dan Pupius",
      "email": "dan@medium.com",
      "url": "http://pupius.co.uk/"
    },
    {
      "name": "Nick Santos",
      "email": "nick@medium.com",
      "url": "http://nick-santos.com/"
    }
  ],
  "main": "lib/phantomjs",
  "bin": {
    "phantomjs": "./bin/phantomjs"
  },
  "scripts": {
    "install": "node install.js",
    "test": "nodeunit --reporter=minimal test/tests.js && eslint install.js"
  },
  "dependencies": {
    "adm-zip": "0.4.4",
    "fs-extra": "~0.23.1",
    "kew": "0.4.0",
    "md5": "~2.0.0",
    "npmconf": "2.1.1",
    "progress": "1.1.8",
    "request": "2.42.0",
    "request-progress": "0.3.1",
    "which": "~1.0.5"
  },
  "devDependencies": {
    "eslint": "1.5.1",
    "nodeunit": "0.9.0"
  },
  "readme": "phantomjs\n=========\n\nAn NPM installer for [PhantomJS](http://phantomjs.org/), headless webkit with JS API.\n\n[![Build Status](https://travis-ci.org/Medium/phantomjs.svg?branch=master)](https://travis-ci.org/Medium/phantomjs)\n\nBuilding and Installing\n-----------------------\n\n```shell\nnpm install phantomjs\n```\n\nOr grab the source and\n\n```shell\nnode ./install.js\n```\n\nWhat this installer is really doing is just grabbing a particular \"blessed\" (by\nthis module) version of Phantom. As new versions of Phantom are released\nand vetted, this module will be updated accordingly.\n\nThe package has been set up to fetch and run Phantom for MacOS (darwin),\nLinux based platforms (as identified by nodejs), and -- as of version 0.2.0 --\nWindows (thanks to [Domenic Denicola](https://github.com/domenic)).  If you\nspot any platform weirdnesses, let us know or send a patch.\n\nRunning\n-------\n\n```shell\nbin/phantomjs [phantom arguments]\n```\n\nAnd npm will install a link to the binary in `node_modules/.bin` as\nit is wont to do.\n\nRunning via node\n----------------\n\nThe package exports a `path` string that contains the path to the\nphantomjs binary/executable.\n\nBelow is an example of using this package via node.\n\n```javascript\nvar path = require('path')\nvar childProcess = require('child_process')\nvar phantomjs = require('phantomjs')\nvar binPath = phantomjs.path\n\nvar childArgs = [\n  path.join(__dirname, 'phantomjs-script.js'),\n  'some other argument (passed to phantomjs script)'\n]\n\nchildProcess.execFile(binPath, childArgs, function(err, stdout, stderr) {\n  // handle results\n})\n\n```\n\nVersioning\n----------\n\nThe major and minor number tracks the version of PhantomJS that will be\ninstalled. The patch number is incremented when there is either an installer\nupdate or a patch build of the phantom binary.\n\nDeciding Where To Get PhantomJS\n-------------------------------\n\nBy default, this package will download phantomjs from `https://bitbucket.org/ariya/phantomjs/downloads`.\nThis should work fine for most people.\n\n##### Downloading from a custom URL\n\nIf bitbucket is down, or the Great Firewall is blocking bitbucket, you may need to use\na download mirror. To set a mirror, set npm config property `phantomjs_cdnurl`.\nDefault is ``.\n\n```shell\nnpm install phantomjs --phantomjs_cdnurl=http://cnpmjs.org/downloads\n```\n\nOr add property into your `.npmrc` file (https://www.npmjs.org/doc/files/npmrc.html)\n\n```\nphantomjs_cdnurl=http://cnpmjs.org/downloads\n```\n\nAnother option is to use PATH variable `PHANTOMJS_CDNURL`.\n```shell\nPHANTOMJS_CDNURL=http://cnpmjs.org/downloads npm install phantomjs\n```\n\n##### Using PhantomJS from disk\n\nIf you plan to install phantomjs many times on a single machine, you can\ninstall the `phantomjs` binary on PATH. The installer will automatically detect\nand use that for non-global installs.\n\nCross-Platform Repositories\n---------------------------\n\nPhantomJS needs to be compiled separately for each platform. This installer\nfinds a prebuilt binary for your operating system, and downloads it.\n\nIf you check your dependencies into git, and work on a cross-platform\nteam, then you need to tell NPM to rebuild any platform-specific dependencies. Run\n\n```shell\nnpm rebuild\n```\n\nas part of your build process. This problem is not specific to PhantomJS, and this\nsolution will work for any NodeJS package with native or platform-specific code.\n\nIf you know in advance that you want to install PhantomJS for a specific architecture,\nyou can set the environment variables: `PHANTOMJS_PLATFORM`\n(to set target platform) and `PHANTOMJS_ARCH` (to set target\narch), where `platform` and `arch` are valid values for\n[process.platform and process.arch](https://nodejs.org/api/process.html).\n\nA Note on PhantomJS\n-------------------\n\nPhantomJS is not a library for NodeJS.  It's a separate environment and code\nwritten for node is unlikely to be compatible.  In particular PhantomJS does\nnot expose a Common JS package loader.\n\nThis is an _NPM wrapper_ and can be used to conveniently make Phantom available\nIt is not a Node JS wrapper.\n\nI have had reasonable experiences writing standalone Phantom scripts which I\nthen drive from within a node program by spawning phantom in a child process.\n\nRead the PhantomJS FAQ for more details: http://phantomjs.org/faq.html\n\n### Linux Note\n\nAn extra note on Linux usage, from the PhantomJS download page:\n\n > This package is built on CentOS 5.8. It should run successfully on Lucid or\n > more modern systems (including other distributions). There is no requirement\n > to install Qt, WebKit, or any other libraries. It is however expected that\n > some base libraries necessary for rendering (FreeType, Fontconfig) and the\n > basic font files are available in the system.\n\nTroubleshooting\n---------------\n\n##### Installation fails with `spawn ENOENT`\n\nThis is NPM's way of telling you that it was not able to start a process. It usually means:\n\n- `node` is not on your PATH, or otherwise not correctly installed.\n- `tar` is not on your PATH. This package expects `tar` on your PATH on Linux-based platforms.\n\nCheck your specific error message for more information.\n\n##### Installation fails with `Error: EPERM` or `operation not permitted` or `permission denied`\n\nThis error means that NPM was not able to install phantomjs to the file system. There are three\nmajor reasons why this could happen:\n\n- You don't have write access to the installation directory.\n- The permissions in the NPM cache got messed up, and you need to run `npm cache clean` to fix them.\n- You have over-zealous anti-virus software installed, and it's blocking file system writes.\n\n##### Installation fails with `Error: read ECONNRESET` or `Error: connect ETIMEDOUT`\n\nThis error means that something went wrong with your internet connection, and the installer\nwas not able to download the PhantomJS binary for your platform. Please try again.\n\n##### I tried again, but I get `ECONNRESET` or `ETIMEDOUT` consistently.\n\nDo you live in China, or a country with an authoritarian government? We've seen problems where\nthe GFW or local ISP blocks bitbucket, preventing the installer from downloading the binary.\n\nTry visiting the [the download page](http://cdn.bitbucket.org/ariya/phantomjs/downloads) manually.\nIf that page is blocked, you can try using a different CDN with the `PHANTOMJS_CDNURL`\nenv variable described above.\n\n##### I am behind a corporate proxy that uses self-signed SSL certificates to intercept encrypted traffic.\n\nYou can tell NPM and the PhantomJS installer to skip validation of ssl keys with NPM's \n[strict-ssl](https://www.npmjs.org/doc/misc/npm-config.html#strict-ssl) setting:\n\n```\nnpm set strict-ssl false\n```\n\nWARNING: Turning off `strict-ssl` leaves you vulnerable to attackers reading\nyour encrypted traffic, so run this at your own risk!\n\n##### I tried everything, but my network is b0rked. What do I do?\n\nIf you install PhantomJS manually, and put it on PATH, the installer will try to\nuse the manually-installed binaries.\n\n##### I'm on Debian or Ubuntu, and the installer failed because it couldn't find `node`\n\nSome Linux distros tried to rename `node` to `nodejs` due to a package\nconflict. This is a non-portable change, and we do not try to support this. The\n[official documentation](https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager#ubuntu-mint-elementary-os)\nrecommends that you run `apt-get install nodejs-legacy` to symlink `node` to `nodejs` \non those platforms, or many NodeJS programs won't work properly.\n\n##### The latest version of this package installs PhantomJS 1.9.8. When is PhantomJS 2.0 coming?\n\nIn January 2015, the PhantomJS project released PhantomJS 2.0 with statically\ncompiled Windows binaries.\n\nThey were not able to create statically-compiled binaries for Linux or OSX 9+.\n\nThis put us in a difficult position. The whole reason this NPM installer exists\nis to provide a portable, cross-platform installation process for\nPhantomJS. Without static binaries, we can't support PhantomJS 2.0.\n\nIf you work on a project that does not need cross-platform installation\n(for example, if your users can compile and install phantomjs themselves on PATH),\nthen there is no good reason to depend on this package. You should call phantomjs\ndirectly with `child_process.spawn`.\n\nThe core PhantomJS team is hard at work trying to producing static binaries,\nbut there's currently no timeline.\n\nContributing\n------------\n\nQuestions, comments, bug reports, and pull requests are all welcome.  Submit them at\n[the project on GitHub](https://github.com/Medium/phantomjs/).  If you haven't contributed to an\n[Medium](http://github.com/Medium/) project before please head over to the\n[Open Source Project](https://github.com/Medium/open-source#note-to-external-contributors) and fill\nout an OCLA (it should be pretty painless).\n\nBug reports that include steps-to-reproduce (including code) are the\nbest. Even better, make them in the form of pull requests.\n\nAuthor\n------\n\n[Dan Pupius](https://github.com/dpup)\n([personal website](http://pupius.co.uk)) and\n[Nick Santos](https://github.com/nicks), supported by\n[A Medium Corporation](http://medium.com/).\n\nLicense\n-------\n\nCopyright 2012 [A Medium Corporation](http://medium.com/).\n\nLicensed under the Apache License, Version 2.0.\nSee the top-level file `LICENSE.txt` and\n(http://www.apache.org/licenses/LICENSE-2.0).\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/Medium/phantomjs/issues"
  },
  "_id": "phantomjs@1.9.19",
  "_from": "phantomjs@^1.9.7-1"
}
