{
  "name": "errorhandler",
  "description": "Development-only error handler middleware",
  "version": "1.4.2",
  "contributors": [
    {
      "name": "Douglas Christopher Wilson",
      "email": "doug@somethingdoug.com"
    },
    {
      "name": "Jonathan Ong",
      "email": "me@jongleberry.com",
      "url": "http://jongleberry.com"
    }
  ],
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "expressjs/errorhandler"
  },
  "dependencies": {
    "accepts": "~1.2.12",
    "escape-html": "1.0.2"
  },
  "devDependencies": {
    "after": "0.8.1",
    "istanbul": "0.3.17",
    "mocha": "2.2.5",
    "supertest": "1.0.1"
  },
  "files": [
    "public/",
    "LICENSE",
    "HISTORY.md",
    "index.js"
  ],
  "engines": {
    "node": ">= 0.8"
  },
  "scripts": {
    "test": "mocha --reporter spec --bail --check-leaks test/",
    "test-cov": "istanbul cover node_modules/mocha/bin/_mocha -- --reporter dot --check-leaks test/",
    "test-travis": "istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --reporter spec --check-leaks test/"
  },
  "readme": "# errorhandler\n\n[![NPM Version][npm-image]][npm-url]\n[![NPM Downloads][downloads-image]][downloads-url]\n[![Build Status][travis-image]][travis-url]\n[![Test Coverage][coveralls-image]][coveralls-url]\n[![Gratipay][gratipay-image]][gratipay-url]\n\nDevelopment-only error handler middleware\n\n## Install\n\n```sh\n$ npm install errorhandler\n```\n\n## API\n\n```js\nvar errorhandler = require('errorhandler')\n```\n\n### errorhandler(options)\n\nCreate new middleware to handle errors and respond with content negotiation.\nThis middleware is only intended to be used in a development environment, as\nthe full error stack traces will be sent back to the client when an error\noccurs.\n\n#### Options\n\nError handler accepts these properties in the options object.\n\n##### log\n\nProvide a function to be called with the error and a string representation of\nthe error. Can be used to write the error to any desired location, or set to\n`false` to only send the error back in the response. Called as\n`log(err, str, req, res)` where `err` is the `Error` object, `str` is a string\nrepresentation of the error, `req` is the request object and `res` is the\nresponse object (note, this function is invoked _after_ the response has been\nwritten).\n\nThe default value for this option is `true` unless `process.env.NODE_ENV === 'test'`.\n\nPossible values:\n\n  * `true`: Log errors using `console.error(str)`.\n  * `false`: Only send the error back in the response.\n  * A function: pass the error to a function for handling.\n\n## Examples\n\n### Simple example\n\nBasic example of adding this middleware as the error handler only in development\nwith `connect` (`express` also can be used in this example).\n\n```js\nvar connect = require('connect')\nvar errorhandler = require('errorhandler')\n\nvar app = connect()\n\nif (process.env.NODE_ENV === 'development') {\n  // only use in development\n  app.use(errorhandler())\n}\n```\n\n### Custom output location\n\nSometimes you may want to output the errors to a different location than STDERR\nduring development, like a system notification, for example.\n\n```js\nvar connect = require('connect')\nvar errorhandler = require('errorhandler')\nvar notifier = require('node-notifier')\n\nvar app = connect()\n\nif (process.env.NODE_ENV === 'development') {\n  // only use in development\n  app.use(errorhandler({log: errorNotification}))\n}\n\nfunction errorNotification(err, str, req) {\n  var title = 'Error in ' + req.method + ' ' + req.url\n\n  notifier.notify({\n    title: title,\n    message: str\n  })\n}\n```\n\n## License\n\n[MIT](LICENSE)\n\n[npm-image]: https://img.shields.io/npm/v/errorhandler.svg\n[npm-url]: https://npmjs.org/package/errorhandler\n[travis-image]: https://img.shields.io/travis/expressjs/errorhandler/master.svg\n[travis-url]: https://travis-ci.org/expressjs/errorhandler\n[coveralls-image]: https://img.shields.io/coveralls/expressjs/errorhandler/master.svg\n[coveralls-url]: https://coveralls.io/r/expressjs/errorhandler?branch=master\n[downloads-image]: https://img.shields.io/npm/dm/errorhandler.svg\n[downloads-url]: https://npmjs.org/package/errorhandler\n[gratipay-image]: https://img.shields.io/gratipay/dougwilson.svg\n[gratipay-url]: https://www.gratipay.com/dougwilson/\n",
  "readmeFilename": "README.md",
  "_id": "errorhandler@1.4.2",
  "_from": "errorhandler@~1.4.2"
}
